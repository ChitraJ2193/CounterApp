image: 
  name: macos:latest
  entrypoint: [""]

variables:
  PROJECT_ID: "counterapplication-460304"
  PROJECT_NUMBER: "189419000467"
  APP_NAME: "CounterApp"
  XCODE_PROJECT: "Number  Counter Application.xcodeproj"
  XCODE_SCHEME: "Number  Counter Application"
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  # Define the build output path as a variable
  BUILD_OUTPUT_PATH: "build/Build/Products/Release-iphonesimulator"

stages:
  - build
  - test
  - deploy

before_script:
  # Install Google Cloud CLI manually
  - GCLOUD_SDK_VERSION="477.0.0"
  - GCLOUD_SDK_ARCH="darwin-x86_64"
  - GCLOUD_SDK_TAR="google-cloud-sdk-${GCLOUD_SDK_VERSION}-${GCLOUD_SDK_ARCH}.tar.gz"
  - GCLOUD_SDK_URL="https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/${GCLOUD_SDK_TAR}"
  - curl -f -o /tmp/${GCLOUD_SDK_TAR} ${GCLOUD_SDK_URL}
  - tar zxf /tmp/${GCLOUD_SDK_TAR} -C /Users/chitrajoshy/
  - export PATH="/Users/chitrajoshy/google-cloud-sdk/bin:$PATH"
  - gcloud version
  - gcloud components install gsutil --quiet || true
  
  # Authenticate and set project
  - echo "$GCP_SERVICE_KEY" > ${CI_PROJECT_DIR}/gcp-key.json
  - gcloud auth activate-service-account --key-file=${CI_PROJECT_DIR}/gcp-key.json
  - gcloud config set project $PROJECT_ID

build:
  stage: build
  tags:
    - macOS
  script:
    - xcodebuild clean build -project "$XCODE_PROJECT" -scheme "$XCODE_SCHEME" -configuration Release -sdk iphonesimulator -derivedDataPath build
    # Verify the build output path exists and list its contents
    - ls -lR ${BUILD_OUTPUT_PATH}
  artifacts:
    paths:
      - ${BUILD_OUTPUT_PATH}/
    expire_in: 1 week

deploy_staging:
  stage: deploy
  tags:
    - macOS
  dependencies:
    - build
  script:
    - gsutil cp -r ${BUILD_OUTPUT_PATH}/* gs://counter_gitcicd_app/ios-builds/staging/
  environment:
    name: staging
  only:
    - develop

deploy_production:
  stage: deploy
  tags:
    - macOS
  dependencies:
    - build
  script:
    - gsutil cp -r ${BUILD_OUTPUT_PATH}/* gs://counter_gitcicd_app/ios-builds/production/
  environment:
    name: production
  only:
    - main
  when: manual 

test:
  stage: test # This stage would run after 'build'
  tags:
    - macOS
  script:
    - xcodebuild test -project "$XCODE_PROJECT" -scheme "$XCODE_SCHEME" -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' # Example test command
  dependencies:
    - build # Tests would depend on the build output or artifacts 
